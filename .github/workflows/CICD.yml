name: CI/CD with Gradle

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  docker-build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle (skip tests)
        run: ./gradlew clean bootJar -x test --stacktrace --info

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/spring-image:latest .

      - name: Push Docker image
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/spring-image:latest

  deploy:
    needs: docker-build-and-push
    runs-on: ubuntu-latest

    steps:
      - name: Deploy to server via SSH
        env:
          EC2_USERNAME: ${{ secrets.EC2_USERNAME }}
          EC2_HOST: ${{ secrets.EC2_HOST }}
          EC2_SSH_KEY: ${{ secrets.EC2_SSH_KEY }}
          APP_PROPERTIES_B64: ${{ secrets.APP_PROPERTIES_B64 }}
        run: |
          echo "$EC2_SSH_KEY" > private_key.pem
          chmod 600 private_key.pem

          ssh -i private_key.pem -o StrictHostKeyChecking=no $EC2_USERNAME@$EC2_HOST << 'EOF'
            set -e
            cd ~/d2s4

            # 운영 설정 파일 복원
            if [ -n "${APP_PROPERTIES_B64}" ]; then
              echo "${APP_PROPERTIES_B64}" | base64 -d > ~/d2s4/resources/application-prod.properties
            fi

            # 최신 이미지로 재기동
            docker compose pull
            docker compose down || true
            docker compose up -d

            docker ps
          EOF

          rm -f private_key.pem
